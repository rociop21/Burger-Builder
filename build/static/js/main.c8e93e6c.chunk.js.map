{"version":3,"sources":["assets/images/burger-logo.png","hoc/Auxiliary.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backrop.js","components/Navigation/SideDrawer/SideDrawer.js","containers/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/OrderSummary/OrderSummary.js","axios-orders.js","hoc/withErrorHandler/withErrorHandler.js","store/actions/signIn.js","store/actions/actionTypes.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","components/UI/Input/Input.js","containers/Checkout/OrderForm/OrderForm.js","store/actions/order.js","containers/Checkout/Checkout.js","containers/Auth/SignUp.js","store/actions/signUp.js","store/actions/googleApiKey.js","containers/Auth/SignIn.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/LogOut.js","App.js","store/reducers/burger.js","store/reducers/register.js","store/reducers/logIn.js","store/reducers/order.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","aux","props","children","logo","react_default","a","createElement","className","style","height","src","burgerLogo","alt","navigationItem","react_router_dom","to","link","active","navigationItems","signIn","checkout","logOut","orders","this","isAuth","NavigationItem","Component","Toolbar","onClick","opened","paddingTop","Logo","NavigationItems","backdrop","show","clicked","sideDrawer","attachedClasses","open","Auxiliary","Backrop","closed","marginTop","Layout","state","showSideDrawer","sideDrawerClosedHandler","_this","setState","sideDrawerOpenedHandler","console","log","Navigation_Toolbar_Toolbar","SideDrawer","connect","logIn","token","BurgerIngredient","ingredient","type","burger","transformedIngredients","Object","keys","ingredients","map","igKey","toConsumableArray","Array","_","i","Burger_BurgerIngredient_BurgerIngredient","key","reduce","arr","el","concat","length","buildControl","label","removed","disabled","added","controls","buildControls","price","toFixed","ctrl","BuildControl","ingredientAdded","ingredientRemoved","purchaseable","ordered","modal","modalClosed","transform","opacity","button","btnType","join","orderSummary","ingredientsSummary","textTransform","conditionalButton","Button","purchaseContinued","purchaseLogIn","purchaseCancelled","instance","axios","create","baseURL","withErrorHandler","WrappedComponent","_Component","_temp","_getPrototypeOf2","classCallCheck","_len","arguments","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","error","errorConfirmedHandler","inherits","createClass","value","_this2","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","Modal","message","logInSuccess","userId","idToken","localStorage","removeItem","checkTimeout","expirationTime","dispatch","setTimeout","BurgerBuilder","purchasing","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","history","push","purchaseLogInHandler","alert","sum","disabledInfo","objectSpread","ings","OrderSummary","Burger","BuildControls","onIngredientAdded","onIngredientRemoved","updatePurchaseState","burgerBuilder","totalPrice","ingName","ingredientName","input","inputElement","inputClases","invalid","touched","inputtype","assign","fieldconfig","onChange","changed","options","option","displayValue","OrderForm","formFields","name","fieldType","fieldConfig","placeholder","rules","requiered","valid","zipcode","minLength","maxLength","isNumeric","street","email","isEmail","deliverymethod","formValid","submitHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","onOrderBurger","inputChangedHandler","inputIdentifier","updatedFormFields","updatedFormField","target","checkValidation","isValid","trim","test","formElements","id","config","form","onSubmit","formElement","Input","post","then","data","orderId","purchaseBurgerSuccess","catch","purchaseBurgerFail","actions","Checkout","Checkout_OrderForm_OrderForm","SignUp","passsword","onRegister","updatedControls","updatedControl","errorMessage","registerRedirect","react_router","register","password","registerData","returnSecureToken","localId","err","SignIn","onLogIn","logInRedirect","logInData","expirationDate","Date","getTime","expiresIn","setItem","amount","ingredientOutput","ig","display","margin","border","padding","Number","parseFloat","Orders","onFetchOrders","Order","queryParams","get","fetchedOrders","LogOut","onLogOut","App","onAutoLogIn","routes","exact","path","component","containers_Layout_Layout","withRouter","getItem","initialState","salad","bacon","cheese","meat","INGREDIENT_PRICES","reducer","undefined","action","defineProperty","loading","purchased","newOrder","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerReducer","registerReducer","logInReducer","orderReducer","store","createStore","applyMiddleware","thunk","app","es","src_App_0","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,6PCEzBC,EAFH,SAACC,GAAD,OAAWA,EAAMC,2BCSdC,EANF,SAACF,GAAD,OACTG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,MAAO,CAACC,OAAQR,EAAMQ,SACxCL,EAAAC,EAAAC,cAAA,OAAKI,IAAKC,IAAYC,IAAI,4BCMnBC,EARQ,SAACZ,GAAD,OACnBG,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACXH,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAMC,GAAId,EAAMe,KAAMT,UAAWN,EAAMgB,OAAS,UAAY,MACtDhB,EAAMC,YC4BJgB,mLA3BP,IAAIC,EAAS,KACTC,EAAW,KACXC,EAAS,KACTC,EAAS,KAYb,OAV0B,IAAtBC,KAAKtB,MAAMuB,SACXL,EAASf,EAAAC,EAAAC,cAACmB,EAAD,CAAgBT,KAAK,WAArB,YAGTO,KAAKtB,MAAMuB,SACXF,EAASlB,EAAAC,EAAAC,cAACmB,EAAD,CAAgBT,KAAK,WAArB,UACTI,EAAWhB,EAAAC,EAAAC,cAACmB,EAAD,CAAgBT,KAAK,aAArB,YACXK,EAASjB,EAAAC,EAAAC,cAACmB,EAAD,CAAgBT,KAAK,WAArB,YAITZ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBACVH,EAAAC,EAAAC,cAACmB,EAAD,CAAgBT,KAAK,IAAIC,QAAM,GAA/B,kBACCE,EACAG,EACAF,EACAC,UAzBaK,aCcfC,EAZC,SAAC1B,GAAD,OACZG,EAAAC,EAAAC,cAAA,UAAQC,UAAU,WACdH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aAAaqB,QAAS3B,EAAM4B,QAA9C,QACAzB,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAMC,GAAG,IAAIP,MAAO,CAACC,OAAQ,GAAIqB,WAAY,KACzC1B,EAAAC,EAAAC,cAACyB,EAAD,CAAMtB,OAAO,SAEjBL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAC0B,EAAD,CAAiBR,OAAQvB,EAAMuB,YCN5BS,EAJE,SAAChC,GAAD,OACbA,EAAMiC,KAAO9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWqB,QAAS3B,EAAMkC,UAAkB,MCsB7DC,EAnBI,SAACnC,GAChB,IAAIoC,EAAkB,CAAC,oBAIvB,OAHIpC,EAAMqC,OACND,EAAkB,CAAC,oBAGnBjC,EAAAC,EAAAC,cAACiC,EAAD,KACInC,EAAAC,EAAAC,cAACkC,EAAD,CAAUL,QAASlC,EAAMwC,OAAQP,KAAMjC,EAAMqC,OAC7ClC,EAAAC,EAAAC,cAAA,OAAKC,UAAW8B,GACZjC,EAAAC,EAAAC,cAACyB,EAAD,CAAMtB,OAAO,QACbL,EAAAC,EAAAC,cAAA,OAAME,MAAO,CAACkC,UAAU,SACpBtC,EAAAC,EAAAC,cAAC0B,EAAD,CAAiBR,OAAQvB,EAAMuB,aCT7CmB,6MACFC,MAAQ,CACJC,gBAAgB,KAGpBC,wBAA0B,WACtBC,EAAKC,SAAS,CAACH,gBAAgB,OAGnCI,wBAA0B,WACtBF,EAAKC,SAAS,CAACH,gBAAgB,IAC/BK,QAAQC,IAAIJ,EAAKH,MAAMC,yFAIvB,OACIzC,EAAAC,EAAAC,cAACiC,EAAD,KACInC,EAAAC,EAAAC,cAAC8C,EAAD,CAASvB,OAAQN,KAAK0B,wBAAyBzB,OAAQD,KAAKtB,MAAMuB,SAClEpB,EAAAC,EAAAC,cAAC+C,EAAD,CAAYZ,OAAQlB,KAAKuB,wBAAyBR,KAAMf,KAAKqB,MAAMC,eAAgBrB,OAAQD,KAAKtB,MAAMuB,SACtGpB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WACfgB,KAAKtB,MAAMC,kBApBPwB,aAiCN4B,cANS,SAAAV,GACpB,MAAO,CACHpB,OAA6B,MAArBoB,EAAMW,MAAMC,QAIbF,CAAyBX,kBCGzBc,mLAtCP,IAAIC,EAAa,KAEjB,OAAQnC,KAAKtB,MAAM0D,MACf,IAAM,eACFD,EAAatD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAC5B,MACJ,IAAM,YACFmD,EACItD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAGvB,MACJ,IAAM,OACFmD,EAAatD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAC5B,MACJ,IAAM,SACFmD,EAAatD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAC5B,MACJ,IAAM,QACFmD,EAAatD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAC5B,MACJ,IAAM,QACFmD,EAAatD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAC5B,MACJ,QACImD,EAAa,KAErB,OAAOA,SA/BgBhC,aCsBhBkC,EAtBA,SAAC3D,GACZ,IAAI4D,EAAyBC,OAAOC,KAAK9D,EAAM+D,aAAaC,IAAI,SAAAC,GAC5D,OAAOJ,OAAAK,EAAA,EAAAL,CAAIM,MAAMnE,EAAM+D,YAAYE,KAASD,IAAI,SAACI,EAAGC,GAChD,OAAOlE,EAAAC,EAAAC,cAACiE,EAAD,CAAkBC,IAAKN,EAAQI,EAAGX,KAAMO,QAEpDO,OAAO,SAACC,EAAKC,GACZ,OAAOD,EAAIE,OAAOD,IACnB,IAMH,OAJsC,IAAlCd,EAAuBgB,SACvBhB,EAAyBzD,EAAAC,EAAAC,cAAA,8CAIzBF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAACiE,EAAD,CAAkBZ,KAAK,cACtBE,EACDzD,EAAAC,EAAAC,cAACiE,EAAD,CAAkBZ,KAAK,mBCNpBmB,EAbM,SAAC7E,GAAD,OACjBG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASN,EAAM8E,OAC9B3E,EAAAC,EAAAC,cAAA,UACIC,UAAU,OACVqB,QAAS3B,EAAM+E,QACfC,SAAUhF,EAAMgF,UAHpB,QAIA7E,EAAAC,EAAAC,cAAA,UACIC,UAAU,OACVqB,QAAS3B,EAAMiF,OAFnB,UCLFC,EAAW,CACb,CAACJ,MAAO,QAAUpB,KAAM,SACxB,CAACoB,MAAO,OAASpB,KAAM,QACvB,CAACoB,MAAO,QAAUpB,KAAM,SACxB,CAACoB,MAAO,SAAWpB,KAAM,WAqBdyB,EAlBO,SAACnF,GAAD,OAClBG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,4BAAoBL,EAAMoF,MAAMC,QAAQ,IACvCH,EAASlB,IAAK,SAAAsB,GAAI,OACfnF,EAAAC,EAAAC,cAACkF,EAAD,CACAhB,IAAKe,EAAKR,MACVA,MAAOQ,EAAKR,MACZG,MAAQ,kBAAMjF,EAAMwF,gBAAiBF,EAAK5B,OAC1CqB,QAAU,kBAAM/E,EAAMyF,kBAAmBH,EAAK5B,OAC9CsB,SAAUhF,EAAMgF,SAASM,EAAK5B,UAElCvD,EAAAC,EAAAC,cAAA,UACAC,UAAU,cACV0E,UAAWhF,EAAM0F,aACjB/D,QAAS3B,EAAM2F,SAHf,eCHOC,EAdD,SAAC5F,GAAD,OACVG,EAAAC,EAAAC,cAACiC,EAAD,KACInC,EAAAC,EAAAC,cAACkC,EAAD,CAAUN,KAAMjC,EAAMiC,KAAMC,QAASlC,EAAM6F,cAC3C1F,EAAAC,EAAAC,cAAA,OACIC,UAAU,QACVC,MAAO,CACHuF,UAAW9F,EAAMiC,KAAO,gBAAkB,qBAC1C8D,QAAS/F,EAAMiC,KAAO,IAAM,MAE/BjC,EAAMC,YCNJ+F,EANA,SAAChG,GAAD,OACXG,EAAAC,EAAAC,cAAA,UACIC,UAAW,CAAC,SAAU,CAACN,EAAMiG,UAAUC,KAAK,KAC5CvE,QAAS3B,EAAMkC,SAAUlC,EAAMC,WCgCxBkG,EAjCM,SAACnG,GAClB,IAAMoG,EAAqBvC,OAAOC,KAAK9D,EAAM+D,aACxCC,IAAK,SAAAC,GACF,OAAO9D,EAAAC,EAAAC,cAAA,MAAIkE,IAAKN,GACR9D,EAAAC,EAAAC,cAAA,QAAME,MAAO,CAAC8F,cAAe,eAAgBpC,GAD9C,KAC8DjE,EAAM+D,YAAYE,MAIvFqC,EAAoB,KAQ5B,OALYA,EADJtG,EAAMuB,OACkBpB,EAAAC,EAAAC,cAACkG,EAAD,CAAQN,QAAQ,UAAU/D,QAASlC,EAAMwG,mBAAzC,YAEArG,EAAAC,EAAAC,cAACkG,EAAD,CAAQN,QAAQ,SAAS/D,QAASlC,EAAMyG,eAAxC,UAI5BtG,EAAAC,EAAAC,cAACiC,EAAD,KACInC,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,+DACAF,EAAAC,EAAAC,cAAA,UACK+F,GAELjG,EAAAC,EAAAC,cAAA,yBAAiBL,EAAMoF,MAAMC,QAAQ,IACrClF,EAAAC,EAAAC,cAAA,kCACCiG,EACDnG,EAAAC,EAAAC,cAACkG,EAAD,CACIN,QAAQ,SACR/D,QAASlC,EAAM0G,mBAFnB,6BCxBGC,EAJEC,IAAMC,OAAQ,CAC3BC,QAAS,kDC2CEC,EAzCU,SAAEC,EAAkBJ,GACzC,gBAAAK,GAAA,SAAAC,IAAA,IAAAC,EAAArE,EAAAe,OAAAuD,EAAA,EAAAvD,CAAAvC,KAAA4F,GAAA,QAAAG,EAAAC,UAAA1C,OAAA2C,EAAA,IAAApD,MAAAkD,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAD,EAAAC,GAAAF,UAAAE,GAAA,OAAA1E,EAAAe,OAAA4D,EAAA,EAAA5D,CAAAvC,MAAA6F,EAAAtD,OAAA6D,EAAA,EAAA7D,CAAAqD,IAAAS,KAAAC,MAAAT,EAAA,CAAA7F,MAAAqD,OAAA4C,MACI5E,MAAQ,CACJkF,MAAO,MAFf/E,EAoBIgF,sBAAwB,WACpBhF,EAAKC,SAAS,CAAC8E,MAAM,QArB7B/E,EAAA,OAAAe,OAAAkE,EAAA,EAAAlE,CAAAqD,EAAAD,GAAApD,OAAAmE,EAAA,EAAAnE,CAAAqD,EAAA,EAAA3C,IAAA,oBAAA0D,MAAA,WAKyB,IAAAC,EAAA5G,KACjBA,KAAK6G,eAAiBvB,EAAMwB,aAAaC,QAAQC,IAAK,SAAAC,GAElD,OADAL,EAAKnF,SAAS,CAAC8E,MAAO,OACfU,IAEXjH,KAAKkH,eAAiB5B,EAAMwB,aAAaK,SAASH,IAAK,SAAAI,GAAG,OAAIA,GAAK,SAAAb,GAC/DK,EAAKnF,SAAS,CAAC8E,MAAOA,QAXlC,CAAAtD,IAAA,uBAAA0D,MAAA,WAgBQrB,EAAMwB,aAAaC,QAAQM,MAAMrH,KAAK6G,gBACtCvB,EAAMwB,aAAaK,SAASE,MAAMrH,KAAKkH,kBAjB/C,CAAAjE,IAAA,SAAA0D,MAAA,WAyBQ,OACI9H,EAAAC,EAAAC,cAACiC,EAAD,KACInC,EAAAC,EAAAC,cAACuI,EAAD,CACI3G,KAAMX,KAAKqB,MAAMkF,MACjBhC,YAAavE,KAAKwG,uBACjBxG,KAAKqB,MAAMkF,MAAQvG,KAAKqB,MAAMkF,MAAMgB,QAAU,MAEnD1I,EAAAC,EAAAC,cAAC2G,EAAqB1F,KAAKtB,YAhC3CkH,EAAA,CAAqBzF,cCIZqH,EAAe,SAACvF,EAAOwF,GAChC,MAAO,CACHrF,KCJqB,gBDKrBsF,QAASzF,EACTwF,OAAQA,IAWH3H,EAAS,WAIlB,OAHA6H,aAAaC,WAAW,SACxBD,aAAaC,WAAW,kBACxBD,aAAaC,WAAW,UACjB,CACHxF,KCpBoB,iBDwBfyF,EAAe,SAACC,GACzB,OAAO,SAAAC,GACHC,WAAW,WACPD,EAASjI,MACK,IAAfgI,KE1BLG,6MACF5G,MAAQ,CACJ6G,YAAY,KAahBC,gBAAkB,WACd3G,EAAKC,SAAS,CAACyG,YAAY,OAG/BE,sBAAwB,WACpB5G,EAAKC,SAAS,CAACyG,YAAY,OAG/BG,wBAA0B,WACtB7G,EAAK9C,MAAM4J,QAAQC,KAAK,gBAG5BC,qBAAuB,WACnBC,MAAM,+CACNjH,EAAK9C,MAAM4J,QAAQC,KAAK,+FAxBP9F,GAOjB,OANYF,OAAOC,KAAKC,GAAaC,IAAI,SAAAC,GACrC,OAAOF,EAAYE,KAElBO,OAAO,SAACwF,EAAKtF,GACV,OAAOsF,EAAMtF,GACd,GACI,mCAqBX,IAAMuF,EAAYpG,OAAAqG,EAAA,EAAArG,CAAA,GACXvC,KAAKtB,MAAMmK,MAElB,IAAK,IAAI5F,KAAO0F,EACZA,EAAa1F,GAAO0F,EAAa1F,IAAQ,EAE7C,OAEIpE,EAAAC,EAAAC,cAACiC,EAAD,KACInC,EAAAC,EAAAC,cAACuI,EAAD,CAAO3G,KAAMX,KAAKqB,MAAM6G,WAAY3D,YAAavE,KAAKoI,uBAClDvJ,EAAAC,EAAAC,cAAC+J,EAAD,CACIrG,YAAazC,KAAKtB,MAAMmK,KACxBzD,kBAAmBpF,KAAKoI,sBACxBlD,kBAAmBlF,KAAKqI,wBACxBlD,cAAiBnF,KAAKwI,qBACtB1E,MAAO9D,KAAKtB,MAAMoF,MAClB7D,OAAQD,KAAKtB,MAAMuB,UAE3BpB,EAAAC,EAAAC,cAACgK,EAAD,CAAQtG,YAAazC,KAAKtB,MAAMmK,OAChChK,EAAAC,EAAAC,cAACiK,EAAD,CACI9E,gBAAiBlE,KAAKtB,MAAMuK,kBAC5B9E,kBAAmBnE,KAAKtB,MAAMwK,oBAC9BxF,SAAUiF,EACV7E,MAAO9D,KAAKtB,MAAMoF,MAClBM,aAAcpE,KAAKmJ,oBAAoBnJ,KAAKtB,MAAMmK,MAClDxE,QAASrE,KAAKmI,0BA1DNhI,aA+Eb4B,cARS,SAAAV,GACpB,MAAO,CACHwH,KAAMxH,EAAM+H,cAAc3G,YAC1BqB,MAAOzC,EAAM+H,cAAcC,WAC3BpJ,OAA8B,OAAtBoB,EAAMW,MAAMC,QAXH,SAAA8F,GACrB,MAAO,CACHkB,kBAAmB,SAACK,GAAD,OAAavB,EC3E7B,CACH3F,KFJsB,iBEKtBmH,eDyEqED,KACrEJ,oBAAqB,SAACI,GAAD,OAAavB,ECrE/B,CACH3F,KFVyB,oBEWzBmH,eDmE0ED,OAYnEvH,CAA2C0D,EAAiBwC,EAAe3C,YE9B3EkE,EA3DD,SAAC9K,GAEX,IAAI+K,EAAe,KACbC,EAAc,CAAC,gBAMrB,OAJIhL,EAAMiL,SAAWjL,EAAMkL,SACvBF,EAAYnB,KAAK,WAGb7J,EAAMmL,WACV,IAAM,OACFJ,EAAe5K,EAAAC,EAAAC,cAAA,QAAAwD,OAAAuH,OAAA,CACX9K,UAAW0K,EAAY9E,KAAK,MACxBlG,EAAMqL,YAFC,CAGXpD,MAAOjI,EAAMiI,MACbqD,SAAUtL,EAAMuL,WACpB,MAEJ,IAAM,WACFR,EAAe5K,EAAAC,EAAAC,cAAA,WAAAwD,OAAAuH,OAAA,CACX9K,UAAW0K,EAAY9E,KAAK,MACxBlG,EAAMqL,YAFC,CAGXpD,MAAOjI,EAAMiI,MACbqD,SAAUtL,EAAMuL,WACpB,MAEJ,IAAM,SACFR,EAAe5K,EAAAC,EAAAC,cAAA,SAAAwD,OAAAuH,OAAA,CACX9K,UAAW0K,EAAY9E,KAAK,MACxBlG,EAAMqL,YAFC,CAGXpD,MAAOjI,EAAMiI,MACbqD,SAAUtL,EAAMuL,UACXvL,EAAMqL,YAAYG,QAAQxH,IAAK,SAAAyH,GAAM,OAClCtL,EAAAC,EAAAC,cAAA,UAAQ4H,MAAOwD,EAAOxD,MAAO1D,IAAKkH,EAAOxD,OACpCwD,EAAOC,iBAIxB,MAEJ,QACIX,EAAe5K,EAAAC,EAAAC,cAAA,QAAAwD,OAAAuH,OAAA,CACH9K,UAAW0K,EAAY9E,KAAK,MAChClG,EAAMqL,YAFC,CAGXpD,MAAOjI,EAAMiI,MACbqD,SAAUtL,EAAMuL,WAK5B,OACIpL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,aAAQL,EAAM8E,OACbiG,ICjDPY,6MACFhJ,MAAQ,CACJiJ,WAAY,CACRC,KAAM,CACFC,UAAW,QACXC,YAAa,CACTrI,KAAM,OACNsI,YAAa,YACblH,MAAO,QAEXmD,MAAO,GACPgE,MAAO,CACHC,WAAW,GAEfC,OAAO,EACPjB,SAAS,GAEbkB,QAAS,CACLN,UAAW,QACXC,YAAa,CACTrI,KAAM,OACNsI,YAAa,eACblH,MAAO,WAEXmD,MAAO,GACPgE,MAAO,CACHC,WAAW,EACXG,UAAW,EACXC,UAAW,EACXC,WAAW,GAEfJ,OAAO,EACPjB,SAAS,GAEbsB,OAAQ,CACJV,UAAW,QACXC,YAAa,CACTrI,KAAM,OACNsI,YAAa,cACblH,MAAO,UAEXmD,MAAO,GACPgE,MAAO,CACHC,WAAW,GAEfC,OAAO,EACPjB,SAAS,GAEbuB,MAAO,CACHX,UAAW,QACXC,YAAa,CACTrI,KAAM,OACNsI,YAAa,cACblH,MAAO,UAEXmD,MAAO,GACPgE,MAAO,CACHC,WAAW,EACXQ,SAAS,GAEbP,OAAO,EACPjB,SAAS,GAEbyB,eAAgB,CACZb,UAAW,SACXC,YAAa,CACTrI,KAAM,WACNsI,YAAa,GACblH,MAAO,mBACP0G,QAAS,CACL,CAACvD,MAAO,UAAWyD,aAAc,WACjC,CAACzD,MAAO,WAAYyD,aAAc,cAG1CzD,MAAO,UACPgE,MAAO,CACHC,WAAW,GAEfC,OAAO,EACPjB,SAAS,IAGjB0B,WAAW,KAkCfC,cAAgB,SAACC,GACbA,EAAMC,iBACN,IAAMC,EAAW,GACjB,IAAK,IAAIC,KAAyBnK,EAAKH,MAAMiJ,WACzCoB,EAASC,GAAyBnK,EAAKH,MAAMiJ,WAAWqB,GAAuBhF,MAEnF,IAAMiF,EAAQ,CACVnJ,YAAajB,EAAK9C,MAAMmK,KACxB/E,MAAOtC,EAAK9C,MAAMoF,MAClB+H,UAAWH,EACXjE,OAAQjG,EAAK9C,MAAM+I,QAGvBjG,EAAK9C,MAAMoN,cAAcF,EAAOpK,EAAK9C,MAAMuD,UAG/C8J,oBAAsB,SAACP,EAAOQ,GAC1B,IAAMC,EAAiB1J,OAAAqG,EAAA,EAAArG,CAAA,GAChBf,EAAKH,MAAMiJ,YAEZ4B,EAAgB3J,OAAAqG,EAAA,EAAArG,CAAA,GACf0J,EAAkBD,IAEzBE,EAAiBvF,MAAQ6E,EAAMW,OAAOxF,MACtCuF,EAAiBrB,MAAQrJ,EAAK4K,gBAAgBF,EAAiBvF,MAAOuF,EAAiBvB,OACvFuB,EAAiBtC,SAAU,EAC3BqC,EAAkBD,GAAmBE,EAErC,IAAIZ,GAAY,EAEhB,IAAK,IAAIU,KAAmBC,EAC5BX,EAAYW,EAAkBD,GAAiBnB,OAASS,EAExD9J,EAAKC,SAAS,CAAC6I,WAAY2B,EAAmBX,UAAWA,oFAhE7C3E,EAAOgE,GACnB,IAAI0B,GAAU,EACd,IAAK1B,EACD,OAAO,EAeX,GAZIA,EAAMC,YACNyB,EAA2B,KAAjB1F,EAAM2F,QAAiBD,GAGjC1B,EAAMI,YACNsB,EAAU1F,EAAMrD,QAAUqH,EAAMI,WAAasB,GAG7C1B,EAAMK,YACNqB,EAAU1F,EAAMrD,QAAUqH,EAAMK,WAAaqB,GAG7C1B,EAAMS,QAAS,CAEfiB,EADgB,wIACEE,KAAK5F,IAAU0F,EAGrC,GAAI1B,EAAMM,UAAW,CAEjBoB,EADgB,QACEE,KAAK5F,IAAU0F,EAGrC,OAAOA,mCAuCD,IAAAzF,EAAA5G,KACAwM,EAAe,GAErB,IAAK,IAAIvJ,KAAOjD,KAAKqB,MAAMiJ,WACvBkC,EAAajE,KAAK,CACdkE,GAAIxJ,EACJyJ,OAAQ1M,KAAKqB,MAAMiJ,WAAWrH,KAItC,IAAI0J,EACA9N,EAAAC,EAAAC,cAAA,QAAM6N,SAAU5M,KAAKuL,eAChBiB,EAAa9J,IAAI,SAAAmK,GAAW,OACzBhO,EAAAC,EAAAC,cAAC+N,EAAD,CACI7J,IAAK4J,EAAYJ,GACjB5C,UAAWgD,EAAYH,OAAOlC,UAC9BT,YAAa8C,EAAYH,OAAOjC,YAChC9D,MAAOkG,EAAYH,OAAO/F,MAC1BnD,MAAOqJ,EAAYH,OAAOjC,YAAYjH,MACtCyG,QAAS,SAACuB,GAAD,OAAW5E,EAAKmF,oBAAoBP,EAAOqB,EAAYJ,KAChE7C,QAASiD,EAAYH,OAAO9C,QAC5BD,SAAUkD,EAAYH,OAAO7B,UAErChM,EAAAC,EAAAC,cAACkG,EAAD,CAAQN,QAAQ,WAAhB,YAIR,OACI9F,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,qCACC4N,UAtLOxM,aA4MT4B,cAhBS,SAAAV,GACpB,MAAO,CACHwH,KAAMxH,EAAM+H,cAAc3G,YAC1BqB,MAAOzC,EAAM+H,cAAcC,WAC3BpH,MAAOZ,EAAMW,MAAMC,MACnBwF,OAAQpG,EAAMW,MAAMyF,SAID,SAAAM,GACvB,MAAO,CACH+D,cAAe,SAACD,EAAW5J,GAAZ,OAAsB8F,ECrLf,SAAE8D,EAAW5J,GACvC,OAAO,SAAA8F,GACHA,EAPG,CACH3F,KLJ6B,0BKW7BkD,EAAMyH,KAAM,qBAAuB9K,EAAO4J,GACrCmB,KAAM,SAAA7F,GACHxF,QAAQC,IAAKuF,EAAS8F,MACtBlF,EA3BqB,SAAE0E,EAAIZ,GACvC,MAAO,CACHzJ,KLY+B,0BKX/B8K,QAAST,EACTZ,UAAWA,GAuBOsB,CAAuBhG,EAAS8F,KAAK1C,KAAMsB,MAExDuB,MAAO,SAAA7G,GACJwB,EAtBkB,SAAExB,GAChC,MAAO,CACHnE,KLK4B,uBKJ5BmE,MAAOA,GAmBW8G,CAAoB9G,IAC9B5E,QAAQC,IAAI2E,MD2K2B+G,CAAuBzB,EAAW5J,OAK1EF,CAA6CsI,GE5MtDkD,mLAGE,OACI1O,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACgK,EAAD,CAAQtG,YAAazC,KAAKtB,MAAMmK,OAChChK,EAAAC,EAAAC,cAAA,oBAAYiB,KAAKtB,MAAMoF,OACvBjF,EAAAC,EAAAC,cAACyO,EAAD,cAPOrN,aA0BR4B,cAbS,SAAAV,GACpB,MAAO,CACHwH,KAAMxH,EAAM+H,cAAc3G,YAC1BqB,MAAOzC,EAAM+H,cAAcC,aAIR,SAAAtB,GACvB,MAAO,IAKIhG,CAA6CwL,GCxBtDE,6MACFpM,MAAQ,CACJuC,SAAU,CACNuH,MAAO,CACHX,UAAW,QACXC,YAAa,CACTrI,KAAM,OACNoB,MAAO,iBAEXmD,MAAO,GACPgE,MAAO,CACHC,WAAW,EACXQ,SAAS,GAEbP,OAAO,GAEX6C,UAAW,CACPlD,UAAW,QACXC,YAAa,CACTrI,KAAM,OACNoB,MAAO,YAEXmD,MAAO,GACPgE,MAAO,CACHC,WAAW,EACXG,UAAW,GAEfF,OAAO,IAGfS,WAAW,KAGfC,cAAgB,SAACC,GACbA,EAAMC,iBACNjK,EAAK9C,MAAMiP,WAAWnM,EAAKH,MAAMuC,SAASuH,MAAMxE,MAAOnF,EAAKH,MAAMuC,SAAS8J,UAAU/G,UAkCzFoF,oBAAsB,SAACP,EAAOQ,GAC1B,IAAM4B,EAAerL,OAAAqG,EAAA,EAAArG,CAAA,GACdf,EAAKH,MAAMuC,UAEZiK,EAActL,OAAAqG,EAAA,EAAArG,CAAA,GACbqL,EAAgB5B,IAEvB6B,EAAelH,MAAQ6E,EAAMW,OAAOxF,MACpCkH,EAAehD,MAAQrJ,EAAK4K,gBAAgByB,EAAelH,MAAOkH,EAAelD,OACjFkD,EAAejE,SAAU,EACzBgE,EAAgB5B,GAAmB6B,EAEnC,IAAIvC,GAAY,EAEhB,IAAK,IAAIU,KAAmB4B,EAC5BtC,EAAYsC,EAAgB5B,GAAiBnB,OAASS,EAEtD9J,EAAKC,SAAS,CAACmC,SAAUgK,EAAiBtC,UAAWA,oFAhDzC3E,EAAOgE,GACnB,IAAI0B,GAAU,EACd,IAAK1B,EACD,OAAO,EAeX,GAZIA,EAAMC,YACNyB,EAA2B,KAAjB1F,EAAM2F,QAAiBD,GAGjC1B,EAAMI,YACNsB,EAAU1F,EAAMrD,QAAUqH,EAAMI,WAAasB,GAG7C1B,EAAMK,YACNqB,EAAU1F,EAAMrD,QAAUqH,EAAMK,WAAaqB,GAG7C1B,EAAMS,QAAS,CAEfiB,EADgB,wIACEE,KAAK5F,IAAU0F,EAGrC,GAAI1B,EAAMM,UAAW,CAEjBoB,EADgB,QACEE,KAAK5F,IAAU0F,EAGrC,OAAOA,mCAuBD,IAAAzF,EAAA5G,KACAwM,EAAe,GAErB,IAAK,IAAIvJ,KAAOjD,KAAKqB,MAAMuC,SACvB4I,EAAajE,KAAK,CACdkE,GAAIxJ,EACJyJ,OAAQ1M,KAAKqB,MAAMuC,SAASX,KAIpC,IAAI0J,EACA9N,EAAAC,EAAAC,cAAA,QAAM6N,SAAU5M,KAAKuL,eAChBiB,EAAa9J,IAAI,SAAAmK,GAAW,OACzBhO,EAAAC,EAAAC,cAAC+N,EAAD,CACI7J,IAAK4J,EAAYJ,GACjB5C,UAAWgD,EAAYH,OAAOlC,UAC9BT,YAAa8C,EAAYH,OAAOjC,YAChC9D,MAAOkG,EAAYH,OAAO/F,MAC1BnD,MAAOqJ,EAAYH,OAAOjC,YAAYjH,MACtCyG,QAAS,SAACuB,GAAD,OAAW5E,EAAKmF,oBAAoBP,EAAOqB,EAAYJ,KAChE7C,QAASiD,EAAYH,OAAO9C,QAC5BD,SAAUkD,EAAYH,OAAO7B,UAErChM,EAAAC,EAAAC,cAACkG,EAAD,CAAQN,QAAQ,WAAhB,YAIJmJ,EAAe,KAEf9N,KAAKtB,MAAM6H,QACXuH,EACIjP,EAAAC,EAAAC,cAAA,SAAIiB,KAAKtB,MAAM6H,MAAMgB,UAI7B,IAAIwG,EAAmB,KAMvB,OAJI/N,KAAKtB,MAAMuB,SACX8N,EAAmBlP,EAAAC,EAAAC,cAACiP,EAAA,EAAD,CAAUxO,GAAG,aAIhCX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACV+O,EACAD,EACAnB,EACD9N,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAMC,GAAG,WAAT,kBAxIKW,aA2JN4B,cAbS,SAAAV,GACpB,MAAO,CACHkF,MAAOlF,EAAM4M,SAAS1H,MACtBtG,OAAiC,OAAzBoB,EAAM4M,SAAShM,QAIJ,SAAA8F,GACvB,MAAO,CACH4F,WAAY,SAACxC,EAAO+C,GAAR,OAAqBnG,ECtIjB,SAACoD,EAAO+C,GAC5B,OAAO,SAAAnG,GACHA,EAtBG,CACH3F,KRHsB,mBQyBtB,IAAM+L,EAAe,CACjBhD,MAAOA,EACP+C,SAAUA,EACVE,mBAAmB,GAGvB9I,IAAMyH,KClCc,wGDkCJoB,GACfnB,KAAK,SAAA7F,GAzBiB,IAAClF,EAAOwF,EA0B3B9F,QAAQC,IAAIuF,GACZY,GA3BoB9F,EA2BKkF,EAAS8F,KAAKvF,QA3BZD,EA2BqBN,EAAS8F,KAAKoB,QA1B/D,CACHjM,KRRwB,mBQSxBsF,QAASzF,EACTwF,OAAQA,OAyBP2F,MAAM,SAAAkB,GACH3M,QAAQC,IAAI0M,GACZvG,EAtBD,CACH3F,KRfqB,gBQgBrBmE,MAoB0B+H,EAAInH,SAAS8F,KAAK1G,WDsHF+G,CAAiBnC,EAAO+C,OAI3DnM,CAA6C0L,GG3JtDc,6MACFlN,MAAQ,CACJuC,SAAU,CACNuH,MAAO,CACHX,UAAW,QACXC,YAAa,CACTrI,KAAM,OACNoB,MAAO,iBAEXmD,MAAO,GACPgE,MAAO,CACHC,WAAW,EACXQ,SAAS,GAEbP,OAAO,GAEX6C,UAAW,CACPlD,UAAW,QACXC,YAAa,CACTrI,KAAM,OACNoB,MAAO,YAEXmD,MAAO,GACPgE,MAAO,CACHC,WAAW,EACXG,UAAW,GAEfF,OAAO,IAGfS,WAAW,KAGfC,cAAgB,SAACC,GACbA,EAAMC,iBACNjK,EAAK9C,MAAM8P,QAAQhN,EAAKH,MAAMuC,SAASuH,MAAMxE,MAAOnF,EAAKH,MAAMuC,SAAS8J,UAAU/G,UAkCtFoF,oBAAsB,SAACP,EAAOQ,GAC1B,IAAM4B,EAAerL,OAAAqG,EAAA,EAAArG,CAAA,GACdf,EAAKH,MAAMuC,UAEZiK,EAActL,OAAAqG,EAAA,EAAArG,CAAA,GACbqL,EAAgB5B,IAEvB6B,EAAelH,MAAQ6E,EAAMW,OAAOxF,MACpCkH,EAAehD,MAAQrJ,EAAK4K,gBAAgByB,EAAelH,MAAOkH,EAAelD,OACjFkD,EAAejE,SAAU,EACzBgE,EAAgB5B,GAAmB6B,EAEnC,IAAIvC,GAAY,EAEhB,IAAK,IAAIU,KAAmB4B,EAC5BtC,EAAYsC,EAAgB5B,GAAiBnB,OAASS,EAEtD9J,EAAKC,SAAS,CAACmC,SAAUgK,EAAiBtC,UAAWA,oFAhDzC3E,EAAOgE,GACnB,IAAI0B,GAAU,EACd,IAAK1B,EACD,OAAO,EAeX,GAZIA,EAAMC,YACNyB,EAA2B,KAAjB1F,EAAM2F,QAAiBD,GAGjC1B,EAAMI,YACNsB,EAAU1F,EAAMrD,QAAUqH,EAAMI,WAAasB,GAG7C1B,EAAMK,YACNqB,EAAU1F,EAAMrD,QAAUqH,EAAMK,WAAaqB,GAG7C1B,EAAMS,QAAS,CAEfiB,EADgB,wIACEE,KAAK5F,IAAU0F,EAGrC,GAAI1B,EAAMM,UAAW,CAEjBoB,EADgB,QACEE,KAAK5F,IAAU0F,EAGrC,OAAOA,mCAuBD,IAAAzF,EAAA5G,KACAwM,EAAe,GAErB,IAAK,IAAIvJ,KAAOjD,KAAKqB,MAAMuC,SACvB4I,EAAajE,KAAK,CACdkE,GAAIxJ,EACJyJ,OAAQ1M,KAAKqB,MAAMuC,SAASX,KAIpC,IAAI0J,EACA9N,EAAAC,EAAAC,cAAA,QAAM6N,SAAU5M,KAAKuL,eAChBiB,EAAa9J,IAAI,SAAAmK,GAAW,OACzBhO,EAAAC,EAAAC,cAAC+N,EAAD,CACI7J,IAAK4J,EAAYJ,GACjB5C,UAAWgD,EAAYH,OAAOlC,UAC9BT,YAAa8C,EAAYH,OAAOjC,YAChC9D,MAAOkG,EAAYH,OAAO/F,MAC1BnD,MAAOqJ,EAAYH,OAAOjC,YAAYjH,MACtCyG,QAAS,SAACuB,GAAD,OAAW5E,EAAKmF,oBAAoBP,EAAOqB,EAAYJ,KAChE7C,QAASiD,EAAYH,OAAO9C,QAC5BD,SAAUkD,EAAYH,OAAO7B,UAErChM,EAAAC,EAAAC,cAACkG,EAAD,CAAQN,QAAQ,WAAhB,YAKJmJ,EAAe,KAEf9N,KAAKtB,MAAM6H,QACXuH,EACIjP,EAAAC,EAAAC,cAAA,SAAIiB,KAAKtB,MAAM6H,MAAMgB,UAI7B,IAAIkH,EAAgB,KAMpB,OAJIzO,KAAKtB,MAAMuB,SACXwO,EAAgB5P,EAAAC,EAAAC,cAACiP,EAAA,EAAD,CAAUxO,GAAG,OAI7BX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACVyP,EACAX,EACAnB,EACD9N,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAMC,GAAG,WAAT,mBAzIKW,aA4JN4B,cAbS,SAAAV,GACpB,MAAO,CACHkF,MAAOlF,EAAMW,MAAMuE,MACnBtG,OAA8B,OAAtBoB,EAAMW,MAAMC,QAID,SAAA8F,GACvB,MAAO,CACHyG,QAAS,SAACrD,EAAO+C,GAAR,OAAqBnG,EXtHjB,SAACoD,EAAO+C,GACzB,OAAO,SAAAnG,GACHA,EAvCG,CACH3F,KCCmB,gBDsCnB,IAAMsM,EAAY,CACdvD,MAAOA,EACP+C,SAAUA,EACVE,mBAAmB,GAGvB9I,IAAMyH,KUjDc,oHViDJ2B,GACX1B,KAAK,SAAA7F,GACF,IAAMwH,EAAiB,IAAIC,MAAK,IAAIA,MAAOC,UAAsC,IAA1B1H,EAAS8F,KAAK6B,WACrEnH,aAAaoH,QAAQ,QAAS5H,EAAS8F,KAAKvF,SAC5CC,aAAaoH,QAAQ,iBAAkBJ,GACvChH,aAAaoH,QAAQ,SAAU5H,EAAS8F,KAAKoB,SAC7CtG,EAASP,EAAaL,EAAS8F,KAAKvF,QAASP,EAAS8F,KAAKoB,UAC3DtG,EAASF,EAAaV,EAAS8F,KAAK6B,cAEvC1B,MAAM,SAAAkB,GACH3M,QAAQC,IAAI0M,GACZvG,EA3CL,CACH3F,KCXkB,aDYlBmE,MAyC2B+H,EAAInH,SAAS8F,KAAK1G,WWkGN+G,CAAcnC,EAAO+C,OAIrDnM,CAA6CwM,GClI7C3C,GAhCD,SAAElN,GACZ,IAAM+D,EAAc,GAEpB,IAAM,IAAI8G,KAAkB7K,EAAM+D,YAC9BA,EAAY8F,KACR,CACIgC,KAAMhB,EACNyF,OAAQtQ,EAAM+D,YAAY8G,KAKtC,IAAM0F,EAAmBxM,EAAYC,IAAI,SAAAwM,GACrC,OAAOrQ,EAAAC,EAAAC,cAAA,QACHE,MAAO,CACH8F,cAAe,aACfoK,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEbrM,IAAKiM,EAAG3E,MAAO2E,EAAG3E,KARf,KAQuB2E,EAAGF,OAR1B,OAWX,OACInQ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,yBAAiBkQ,GACjBpQ,EAAAC,EAAAC,cAAA,mBAAUF,EAAAC,EAAAC,cAAA,qBAAawQ,OAAOC,WAAY9Q,EAAMoF,OAAQC,QAAS,OCrBvE0L,+LAEEzP,KAAKtB,MAAMgR,cAAc1P,KAAKtB,MAAMuD,MAAOjC,KAAKtB,MAAM+I,yCAItD,IAAI1H,EASJ,OAPAA,EAASC,KAAKtB,MAAMqB,OAAO2C,IAAK,SAAAkJ,GAAK,OACjC/M,EAAAC,EAAAC,cAAC4Q,GAAD,CACI1M,IAAK2I,EAAMa,GACXhK,YAAamJ,EAAMnJ,YACnBqB,MAAO8H,EAAM9H,UAIjBjF,EAAAC,EAAAC,cAAA,WACKgB,UAjBII,aAqCN4B,eAdS,SAAAV,GACpB,MAAO,CACHtB,OAAQsB,EAAMuK,MAAM7L,OACpBkC,MAAOZ,EAAMW,MAAMC,MACnBwF,OAAQpG,EAAMW,MAAMyF,SAID,SAAAM,GACvB,MAAO,CACH2H,cAAe,SAACzN,EAAOwF,GAAR,OAAmBM,EPwBf,SAAC9F,EAAOwF,GAC/B,OAAO,SAAAM,GACHA,EAPG,CACH3F,KLjD0B,uBKwD1B,IAAMwN,EAAc,SAAW3N,EAAQ,8BAAgCwF,EAAS,IAChFnC,EAAMuK,IAAK,eAAiBD,GACvB5C,KAAM,SAAA5F,GACH,IAAM0I,EAAgB,GACtB,IAAM,IAAI7M,KAAOmE,EAAI6F,KACjB6C,EAAcvH,KAAdhG,OAAAqG,EAAA,EAAArG,CAAA,GACO6E,EAAI6F,KAAKhK,GADhB,CAEIwJ,GAAIxJ,KAGZ8E,EAhCL,CACH3F,KLlC4B,uBKmC5BrC,OA8BoC+P,MAE/B1C,MAAO,SAAAkB,GACJvG,EA5BL,CACH3F,KLxCyB,oBKyCzBmE,MA0BiC+H,OOxCWhB,CAAoBrL,EAAOwF,OAIhE1F,CAAgD0D,EAAkBgK,GAAQnK,ICxCnFyK,+LAEE/P,KAAKtB,MAAMsR,4CAGX,OAAOnR,EAAAC,EAAAC,cAACiP,EAAA,EAAD,CAAUxO,GAAG,aALPW,aAeN4B,eAAQ,KANI,SAAAgG,GACvB,MAAO,CACHiI,SAAU,kBAAMjI,EAASuF,QAIlBvL,CAAkCgO,ICP3CE,+LAGFjQ,KAAKtB,MAAMwR,+CAKX,IAAIC,EACFtR,EAAAC,EAAAC,cAACiP,EAAA,EAAD,KACEnP,EAAAC,EAAAC,cAACiP,EAAA,EAAD,CAAOoC,OAAK,EAACC,KAAK,IAAIC,UAAWrI,IACjCpJ,EAAAC,EAAAC,cAACiP,EAAA,EAAD,CAAOqC,KAAK,UAAUC,UAAW7C,IACjC5O,EAAAC,EAAAC,cAACiP,EAAA,EAAD,CAAOqC,KAAK,UAAUC,UAAW/B,IACjC1P,EAAAC,EAAAC,cAACiP,EAAA,EAAD,CAAUxO,GAAG,OAiBjB,OAbIQ,KAAKtB,MAAMuB,SACbkQ,EACEtR,EAAAC,EAAAC,cAACiP,EAAA,EAAD,KACEnP,EAAAC,EAAAC,cAACiP,EAAA,EAAD,CAAOoC,OAAK,EAACC,KAAK,IAAIC,UAAWrI,IACjCpJ,EAAAC,EAAAC,cAACiP,EAAA,EAAD,CAAOqC,KAAK,YAAYC,UAAW/C,IACnC1O,EAAAC,EAAAC,cAACiP,EAAA,EAAD,CAAOqC,KAAK,UAAUC,UAAW7C,IACjC5O,EAAAC,EAAAC,cAACiP,EAAA,EAAD,CAAOqC,KAAK,UAAUC,UAAWP,KACjClR,EAAAC,EAAAC,cAACiP,EAAA,EAAD,CAAOqC,KAAK,UAAUC,UAAWb,KACjC5Q,EAAAC,EAAAC,cAACiP,EAAA,EAAD,CAAUxO,GAAG,QAMnBX,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACEV,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwR,EAAD,KACGJ,YAlCOhQ,aAsDHqQ,eAAWzO,YAZF,SAAAV,GACtB,MAAO,CACLpB,OAA8B,OAAtBoB,EAAMW,MAAMC,QAIG,SAAA8F,GACzB,MAAO,CACLmI,YAAa,kBAAMnI,EfKZ,SAAAA,GACH,IAAM9F,EAAQ0F,aAAa8I,QAAQ,SACnC,GAAKxO,EAEE,CACH,IAAM0M,EAAiB,IAAIC,KAAKjH,aAAa8I,QAAQ,mBACrD,GAAI9B,GAAkB,IAAIC,KACtB7G,EAASjI,SACN,CACH,IAAM2H,EAASE,aAAa8I,QAAQ,UACpC1I,EAASP,EAAavF,EAAOwF,IAC7BM,EAASF,GAAc8G,EAAeE,WAAY,IAAID,MAAOC,WAAa,YAR9E9G,EAASjI,UeJKiC,CAA6CkO,gCCjEjES,GAAe,CACjBjO,YAAa,CACTkO,MAAO,EACPC,MAAO,EACPC,OAAQ,EACRC,KAAM,GAEVzH,WAAY,GAGV0H,GAAoB,CACtBJ,MAAO,GACPE,OAAQ,GACRC,KAAM,IACNF,MAAO,IA4BII,GAzBC,WAAkC,IAAjC3P,EAAiC2E,UAAA1C,OAAA,QAAA2N,IAAAjL,UAAA,GAAAA,UAAA,GAAzB0K,GAAcQ,EAAWlL,UAAA1C,OAAA,EAAA0C,UAAA,QAAAiL,EAC9C,OAAQC,EAAO9O,MACX,IfrBsB,iBesBlB,OAAOG,OAAAqG,EAAA,EAAArG,CAAA,GACAlB,EADP,CAEIoB,YAAYF,OAAAqG,EAAA,EAAArG,CAAA,GACLlB,EAAMoB,YADFF,OAAA4O,GAAA,EAAA5O,CAAA,GAEN2O,EAAO3H,eAAiBlI,EAAMoB,YAAYyO,EAAO3H,gBAAkB,IAExEF,WAAYhI,EAAMgI,WAAa0H,GAAkBG,EAAO3H,kBAEhE,If7ByB,oBe8BrB,OAAOhH,OAAAqG,EAAA,EAAArG,CAAA,GACAlB,EADP,CAEIoB,YAAYF,OAAAqG,EAAA,EAAArG,CAAA,GACLlB,EAAMoB,YADFF,OAAA4O,GAAA,EAAA5O,CAAA,GAEN2O,EAAO3H,eAAiBlI,EAAMoB,YAAYyO,EAAO3H,gBAAkB,IAExEF,WAAYhI,EAAMgI,WAAa0H,GAAkBG,EAAO3H,kBAEhE,QACI,OAAOlI,ICtCbqP,GAAe,CACjBzO,MAAO,KACPwF,OAAQ,KACRlB,MAAO,KACP6K,SAAS,GA8BEJ,GA3BC,WAAkC,IAAjC3P,EAAiC2E,UAAA1C,OAAA,QAAA2N,IAAAjL,UAAA,GAAAA,UAAA,GAAzB0K,GAAcQ,EAAWlL,UAAA1C,OAAA,EAAA0C,UAAA,QAAAiL,EAC9C,OAAQC,EAAO9O,MACX,IhBRsB,iBgBSlB,OAAOG,OAAAqG,EAAA,EAAArG,CAAA,GACAlB,EADP,CAEIkF,MAAO,KACP6K,SAAS,IAEjB,IhBbwB,mBgBcpB,OAAO7O,OAAAqG,EAAA,EAAArG,CAAA,GACAlB,EADP,CAEIY,MAAOiP,EAAOxJ,QACdD,OAAQyJ,EAAOzJ,OACflB,MAAO,KACP6K,SAAS,IAEjB,IhBpBqB,gBgBqBb,OAAO7O,OAAAqG,EAAA,EAAArG,CAAA,GACAlB,EADP,CAEIkF,MAAO2K,EAAO3K,MACd6K,SAAS,IAErB,QACI,OAAQ/P,IC9BdqP,GAAe,CACjBzO,MAAO,KACPwF,OAAQ,KACRlB,MAAO,KACP6K,SAAS,GAoCEJ,GAjCC,WAAkC,IAAjC3P,EAAiC2E,UAAA1C,OAAA,QAAA2N,IAAAjL,UAAA,GAAAA,UAAA,GAAzB0K,GAAcQ,EAAWlL,UAAA1C,OAAA,EAAA0C,UAAA,QAAAiL,EAC9C,OAAQC,EAAO9O,MACX,IjBJmB,ciBKf,OAAOG,OAAAqG,EAAA,EAAArG,CAAA,GACAlB,EADP,CAEIkF,MAAO,KACP6K,SAAS,IAEjB,IjBTqB,gBiBUjB,OAAO7O,OAAAqG,EAAA,EAAArG,CAAA,GACAlB,EADP,CAEIY,MAAOiP,EAAOxJ,QACdD,OAAQyJ,EAAOzJ,OACflB,MAAO,KACP6K,SAAS,IAEjB,IjBhBkB,aiBiBV,OAAO7O,OAAAqG,EAAA,EAAArG,CAAA,GACAlB,EADP,CAEIkF,MAAO2K,EAAO3K,MACd6K,SAAS,IAErB,IjBrBoB,eiBsBhB,OAAO7O,OAAAqG,EAAA,EAAArG,CAAA,GACAlB,EADP,CAEIY,MAAO,KACPwF,OAAQ,OAEhB,QACI,OAAQpG,ICpCdqP,GAAe,CACjB3Q,OAAQ,GACRqR,SAAS,EACTC,WAAW,GAkDAL,GA/CC,WAAkC,IAAjC3P,EAAiC2E,UAAA1C,OAAA,QAAA2N,IAAAjL,UAAA,GAAAA,UAAA,GAAzB0K,GAAcQ,EAAWlL,UAAA1C,OAAA,EAAA0C,UAAA,QAAAiL,EAC9C,OAAQC,EAAO9O,MACX,IlBSqB,gBkBHrB,IlBA6B,wBkBCzB,OAAOG,OAAAqG,EAAA,EAAArG,CAAA,GACAlB,EADP,CAEIkF,MAAO,KACP8K,WAAW,IAEnB,IlBL+B,0BkBM3B,IAAMC,EAAQ/O,OAAAqG,EAAA,EAAArG,CAAA,GAAS2O,EAAOrF,UAAhB,CAA2BY,GAAIyE,EAAOhE,UACpD,OAAO3K,OAAAqG,EAAA,EAAArG,CAAA,GACAlB,EADP,CAEIkF,MAAO,KACPxG,OAAQsB,EAAMtB,OAAOsD,OAAQiO,GAC7BD,WAAW,IAEnB,IlBZ4B,uBkBaxB,OAAO9O,OAAAqG,EAAA,EAAArG,CAAA,GACAlB,EADP,CAEIgQ,WAAW,EACX9K,MAAO2K,EAAO3K,QAEtB,IlBxB0B,qBkByBtB,OAAOhE,OAAAqG,EAAA,EAAArG,CAAA,GACAlB,GAEX,IlB3B4B,uBkB4BxB,OAAOkB,OAAAqG,EAAA,EAAArG,CAAA,GACAlB,EADP,CAEItB,OAAQmR,EAAOnR,SAEvB,IlB/ByB,oBkBgCrB,OAAOwC,OAAAqG,EAAA,EAAArG,CAAA,GACAlB,EADP,CAEIkF,MAAO2K,EAAO3K,QAEtB,QACI,OAAQlF,ICvCdkQ,GAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,EAAOpF,GAC9BqF,UAAUC,cACP/D,SAAS6D,GACT9E,KAAK,SAAAiF,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB9Q,QACf0Q,UAAUC,cAAcM,YAI1B3Q,QAAQC,IACN,iHAKE8K,GAAUA,EAAO6F,UACnB7F,EAAO6F,SAASN,KAMlBtQ,QAAQC,IAAI,sCAGR8K,GAAUA,EAAO8F,WACnB9F,EAAO8F,UAAUP,UAO5B7E,MAAM,SAAA7G,GACL5E,QAAQ4E,MAAM,4CAA6CA,KClFjE,IAAMkM,GAAmBhB,OAAOiB,sCAAwCC,KAElEC,GAAcC,aAAgB,CAChCzJ,cAAe0J,GACf7E,SAAU8E,GACV/Q,MAAOgR,GACPpH,MAAOqH,KAGLC,GAAQC,aAAYP,GAAaH,GACnCW,aAAgBC,QAGdC,GACFzU,EAAAC,EAAAC,cAACwU,EAAA,EAAD,CAAUL,MAAOA,IACbrU,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACIV,EAAAC,EAAAC,cAACyU,GAAD,QAMZC,IAASC,OAAOJ,GAAKK,SAASC,eAAe,SDdtC,SAAkBlH,GACvB,GAA6C,kBAAmBqF,UAAW,CAGzE,GADkB,IAAI8B,IAAIC,GAAwBrC,OAAOC,SAASqC,MACpDC,SAAWvC,OAAOC,SAASsC,OAIvC,OAGFvC,OAAOwC,iBAAiB,OAAQ,WAC9B,IAAMnC,EAAK,GAAAzO,OAAMyQ,GAAN,sBAEPvC,IAgEV,SAAiCO,EAAOpF,GAEtCwH,MAAMpC,GACH9E,KAAK,SAAA7F,GAEJ,IAAMgN,EAAchN,EAASiN,QAAQvE,IAAI,gBAEnB,MAApB1I,EAASkN,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5CvC,UAAUC,cAAcuC,MAAMvH,KAAK,SAAAiF,GACjCA,EAAauC,aAAaxH,KAAK,WAC7ByE,OAAOC,SAAS+C,aAKpB5C,GAAgBC,EAAOpF,KAG1BU,MAAM,WACLzL,QAAQC,IACN,mEArFA8S,CAAwB5C,EAAOpF,GAI/BqF,UAAUC,cAAcuC,MAAMvH,KAAK,WACjCrL,QAAQC,IACN,gHAMJiQ,GAAgBC,EAAOpF,MCT/BsF,GAEesB","file":"static/js/main.c8e93e6c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","const aux = (props) => props.children;\r\n\r\nexport default aux;","import React from 'react';\r\nimport burgerLogo from '../../assets/images/burger-logo.png'\r\n\r\nconst logo = (props) => (\r\n    <div className='Logo' style={{height: props.height}}>\r\n        <img src={burgerLogo} alt='Hamburger Logo'/>\r\n    </div>\r\n);\r\n\r\nexport default logo;","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst navigationItem = (props) => (\r\n    <li className='NavigationIem'>\r\n       <Link to={props.link} className={props.active ? '.active' : null} >\r\n            {props.children}\r\n       </Link> \r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React, {Component} from 'react';\r\nimport NavigationItem from './NavigationItem';\r\n\r\nclass navigationItems extends Component {\r\n\r\n    render () {\r\n\r\n        let signIn = null;\r\n        let checkout = null;\r\n        let logOut = null;\r\n        let orders = null;\r\n\r\n        if (this.props.isAuth === false) {\r\n            signIn = <NavigationItem link=\"/signin\">Sign In</NavigationItem>\r\n        };\r\n\r\n        if (this.props.isAuth) {\r\n            orders = <NavigationItem link=\"/orders\">Orders</NavigationItem>\r\n            checkout = <NavigationItem link=\"/checkout\">Checkout</NavigationItem>\r\n            logOut = <NavigationItem link=\"/logOut\">Log Out</NavigationItem>\r\n        };\r\n        \r\n        return (\r\n            <ul className='NavigationIems'>\r\n                <NavigationItem link=\"/\" active>Burger Builder</NavigationItem>\r\n                {signIn}\r\n                {orders}\r\n                {checkout}\r\n                {logOut}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default navigationItems;\r\n\r\n","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Toolbar = (props) => (\r\n    <header className='Toolbar'>\r\n        <button className='SideButton' onClick={props.opened}>Menu</button>\r\n        <Link to=\"/\" style={{height: 56, paddingTop: 10}}>\r\n            <Logo height=\"80%\" />\r\n        </Link>\r\n        <nav className='DesktopOnly' >\r\n            <NavigationItems isAuth={props.isAuth} />\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default Toolbar;","import React from 'react';\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className='Backdrop' onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Aux from '../../../hoc/Auxiliary';\r\nimport Backdrop from '../../UI/Backdrop/Backrop'\r\n\r\nconst sideDrawer = (props) => {\r\n    let attachedClasses = ['SideDrawer Close']\r\n    if (props.open) {\r\n        attachedClasses = ['SideDrawer Open']\r\n    }\r\n    return(\r\n        <Aux>\r\n            <Backdrop clicked={props.closed} show={props.open} />\r\n            <div className={attachedClasses}>\r\n                <Logo height=\"11%\"/>\r\n                <nav  style={{marginTop:'32px'}}>\r\n                    <NavigationItems isAuth={props.isAuth} />\r\n                </nav>\r\n            </div> \r\n        </Aux>\r\n        \r\n    );\r\n};\r\n\r\nexport default sideDrawer;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Aux from '../../hoc/Auxiliary'\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\n\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({showSideDrawer: false});\r\n    }\r\n\r\n    sideDrawerOpenedHandler = () => {\r\n        this.setState({showSideDrawer: true});\r\n        console.log(this.state.showSideDrawer)\r\n    }\r\n\r\n    render () {\r\n        return(\r\n            <Aux>\r\n                <Toolbar opened={this.sideDrawerOpenedHandler} isAuth={this.props.isAuth} />\r\n                <SideDrawer closed={this.sideDrawerClosedHandler} open={this.state.showSideDrawer} isAuth={this.props.isAuth} />\r\n                <main className='Content'>\r\n                {this.props.children}\r\n                </main>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuth: state.logIn.token != null,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout);","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass BurgerIngredient extends Component{\r\n    render (){\r\n        let ingredient = null;\r\n\r\n        switch (this.props.type){\r\n            case ('bread-bottom'):\r\n                ingredient = <div className='BreadBottom'></div>\r\n                break;\r\n            case ('bread-top'):\r\n                ingredient = (\r\n                    <div className='BreadTop'>\r\n                        <div className='Seeds1'></div>\r\n                        <div className='Seeds2'></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case ('meat'):\r\n                ingredient = <div className='Meat'></div>\r\n                break;\r\n            case ('cheese'):\r\n                ingredient = <div className='Cheese'></div>\r\n                break;\r\n            case ('salad'):\r\n                ingredient = <div className='Salad'></div>\r\n                break;\r\n            case ('bacon'):\r\n                ingredient = <div className='Bacon'></div>\r\n                break;\r\n            default:\r\n                ingredient = null;\r\n        }\r\n        return ingredient;\r\n    }\r\n}\r\n\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n}\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport BurgerIngredient from '../Burger/BurgerIngredient/BurgerIngredient'\r\n\r\n\r\nconst burger = (props) => {\r\n    let transformedIngredients = Object.keys(props.ingredients).map(igKey => {\r\n        return [...Array(props.ingredients[igKey])].map((_, i) =>{\r\n            return <BurgerIngredient key={igKey + i} type={igKey} />\r\n        });\r\n    }).reduce((arr, el) => {\r\n        return arr.concat(el)\r\n    }, []);\r\n\r\n    if (transformedIngredients.length === 0) {\r\n        transformedIngredients = <p>Please start adding ingredients!</p>\r\n    }\r\n\r\n    return(\r\n        <div className='Burger'>\r\n            <BurgerIngredient type=\"bread-top\"/>\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default burger;","import React from 'react';\r\n\r\nconst buildControl = (props) =>(\r\n    <div className='BuildControl'>\r\n        <div className='Label'>{props.label}</div>\r\n        <button \r\n            className='Less' \r\n            onClick={props.removed}\r\n            disabled={props.disabled}>Less</button>\r\n        <button \r\n            className='More' \r\n            onClick={props.added}>More</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\n\r\nconst controls = [\r\n    {label: 'Salad' , type: 'salad'},\r\n    {label: 'Meat' , type: 'meat'},\r\n    {label: 'Bacon' , type: 'bacon'},\r\n    {label: 'Cheese' , type: 'cheese'},\r\n];\r\n\r\nconst buildControls = (props) =>(\r\n    <div className='BuildControls'>\r\n        <h4>Current price: {props.price.toFixed(2)}</h4>\r\n        {controls.map (ctrl => (\r\n            <BuildControl \r\n            key={ctrl.label} \r\n            label={ctrl.label}\r\n            added={ () => props.ingredientAdded (ctrl.type)}\r\n            removed={ () => props.ingredientRemoved (ctrl.type)}\r\n            disabled={props.disabled[ctrl.type]} />\r\n        ))}\r\n        <button \r\n        className='OrderButton'\r\n        disabled={!props.purchaseable}\r\n        onClick={props.ordered} >Order now</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControls;","import React from 'react';\r\nimport Aux from '../../../hoc/Auxiliary'\r\nimport Backdrop from '../Backdrop/Backrop';\r\n\r\n\r\nconst modal = (props) => (\r\n    <Aux>\r\n        <Backdrop show={props.show} clicked={props.modalClosed}/>\r\n        <div \r\n            className='Modal'\r\n            style={{\r\n                transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                opacity: props.show ? '1' : '0'\r\n            }}>\r\n            {props.children}\r\n        </div>\r\n    </Aux>\r\n);\r\n\r\nexport default modal;","import React from 'react';\r\n\r\nconst button = (props) => (\r\n    <button\r\n        className={['Button', [props.btnType]].join(' ')}\r\n        onClick={props.clicked}>{props.children}</button>\r\n);\r\n\r\nexport default button;","import React from 'react';\r\nimport Aux from '../../hoc/Auxiliary';\r\nimport Button from '../UI/Button/Button'\r\n\r\nconst orderSummary = (props) => {\r\n    const ingredientsSummary = Object.keys(props.ingredients)\r\n        .map (igKey => {\r\n            return <li key={igKey}>\r\n                    <span style={{textTransform: 'capitalize'}}>{igKey}</span>: {props.ingredients[igKey]}\r\n                </li>\r\n        });\r\n\r\n        let conditionalButton = null;\r\n\r\n        if (props.isAuth) {\r\n                conditionalButton = <Button btnType='Success' clicked={props.purchaseContinued} >Continue</Button>\r\n            } else {\r\n                conditionalButton = <Button btnType='Danger' clicked={props.purchaseLogIn} >Log In</Button>\r\n            }\r\n\r\n    return(\r\n        <Aux>\r\n            <h3>Yor order</h3>\r\n            <p>A delicious burger with the following ingredients:</p>\r\n            <ul>\r\n                {ingredientsSummary}\r\n            </ul>\r\n            <p>Total price: {props.price.toFixed(2)}</p>\r\n            <p>Continue to checkout?</p>\r\n            {conditionalButton}\r\n            <Button \r\n                btnType='Danger'\r\n                clicked={props.purchaseCancelled} >Cancel</Button>\r\n        </Aux>\r\n    )\r\n};\r\n\r\nexport default orderSummary;","import axios from 'axios';\r\n\r\nconst instance = axios.create ({\r\n    baseURL: 'https://react-my-burger-cf481.firebaseio.com/'\r\n})\r\n\r\nexport default instance;","import React, {Component} from 'react';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Aux from '../Auxiliary'\r\n\r\n\r\nconst withErrorHandler = ( WrappedComponent, axios ) => {\r\n    return class extends Component {\r\n        state = {\r\n            error: null\r\n        }\r\n\r\n        componentDidMount () {\r\n            this.reqInterceptor = axios.interceptors.request.use( req => {\r\n                this.setState({error: null});\r\n                return req;\r\n            } );\r\n            this.resInterceptor = axios.interceptors.response.use( res => res, error => {\r\n                this.setState({error: error});\r\n            } );\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({error:null})\r\n        }\r\n\r\n        render () {\r\n            return (\r\n                <Aux>\r\n                    <Modal \r\n                        show={this.state.error}\r\n                        modalClosed={this.errorConfirmedHandler}>\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </Aux>\r\n            );\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default withErrorHandler;\r\n","import axios from 'axios';\r\nimport * as actionTypes from './actionTypes';\r\nimport * as Keys from './googleApiKey';\r\n\r\nexport const logInStart = () => {\r\n    return {\r\n        type: actionTypes.LOGIN_START\r\n    };\r\n};\r\n\r\nexport const logInSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.LOGIN_SUCCESS,\r\n        idToken: token,\r\n        userId: userId,\r\n    };\r\n};\r\n\r\nexport const logInFail = (error) => {\r\n    return {\r\n        type: actionTypes.LOGIN_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const logOut = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n    return {\r\n        type: actionTypes.LOGIN_LOGOUT\r\n    };\r\n};\r\n\r\nexport const checkTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logOut());\r\n        }, expirationTime*1000);\r\n    };\r\n};\r\n\r\nexport const logIn = (email, password) => {\r\n    return dispatch => {\r\n        dispatch(logInStart());\r\n        const logInData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        }\r\n        const url = Keys.signInApiKey ;\r\n        axios.post(url, logInData)\r\n            .then(response => {\r\n                const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n                localStorage.setItem('token', response.data.idToken);\r\n                localStorage.setItem('expirationDate', expirationDate);\r\n                localStorage.setItem('userId', response.data.localId);\r\n                dispatch(logInSuccess(response.data.idToken, response.data.localId));\r\n                dispatch(checkTimeout(response.data.expiresIn));\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                dispatch(logInFail(err.response.data.error))\r\n            })\r\n    };\r\n};\r\n\r\nexport const checkState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            dispatch(logOut());\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if (expirationDate <= new Date()) {\r\n                dispatch(logOut());\r\n            } else {\r\n                const userId = localStorage.getItem('userId');\r\n                dispatch(logInSuccess(token, userId));\r\n                dispatch(checkTimeout((expirationDate.getTime() - new Date().getTime()) / 1000))\r\n            }\r\n        }\r\n    }\r\n}","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\n\r\nexport const REGISTER_START = 'REGISTER_START';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\n\r\nexport const LOGIN_START = 'LOGIN_START';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGIN_LOGOUT = 'LOGIN_LOGOUT';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';","import React, {Component} from 'react';\r\nimport Aux from '../../hoc/Auxiliary';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/OrderSummary/OrderSummary';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport {connect} from 'react-redux';\r\nimport * as burgerActions from '../../store/actions/index';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass BurgerBuilder extends Component{\r\n    state = {\r\n        purchasing: false,\r\n    };\r\n\r\n    updatePurchaseState (ingredients) {\r\n        const sum = Object.keys(ingredients).map(igKey => {\r\n            return ingredients[igKey];\r\n        })\r\n            .reduce((sum, el) => {\r\n                return sum + el;\r\n            }, 0);\r\n        return sum>0;\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        this.setState({purchasing: true})\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({purchasing: false}) \r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        this.props.history.push('/checkout')\r\n    }\r\n\r\n    purchaseLogInHandler = () => {\r\n        alert('You have to be loged in to place your order');\r\n        this.props.history.push('/signin')\r\n    }\r\n\r\n    render(){\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        };\r\n        for (let key in disabledInfo) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n        return (\r\n            \r\n            <Aux>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    <OrderSummary \r\n                        ingredients={this.props.ings} \r\n                        purchaseCancelled={this.purchaseCancelHandler} \r\n                        purchaseContinued={this.purchaseContinueHandler} \r\n                        purchaseLogIn = {this.purchaseLogInHandler}\r\n                        price={this.props.price}\r\n                        isAuth={this.props.isAuth} />\r\n                </Modal>\r\n                <Burger ingredients={this.props.ings} />\r\n                <BuildControls \r\n                    ingredientAdded={this.props.onIngredientAdded}\r\n                    ingredientRemoved={this.props.onIngredientRemoved} \r\n                    disabled={disabledInfo}\r\n                    price={this.props.price}\r\n                    purchaseable={this.updatePurchaseState(this.props.ings)}\r\n                    ordered={this.purchaseHandler} />\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (ingName) => dispatch(burgerActions.addIngredient(ingName)),\r\n        onIngredientRemoved: (ingName) => dispatch(burgerActions.removeIngredient(ingName)),\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        isAuth: state.logIn.token !== null\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchProps)(withErrorHandler(BurgerBuilder, axios));","import * as actionTypes from './actionTypes';\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};","import React from 'react';\r\n\r\nconst input = (props) => {\r\n    \r\n    let inputElement = null;\r\n    const inputClases = ['inputElement'];\r\n\r\n    if (props.invalid && props.touched) {\r\n        inputClases.push('Invalid');\r\n    }\r\n\r\n    switch (props.inputtype) {\r\n        case ('text'):\r\n            inputElement = <input \r\n                className={inputClases.join(' ')}\r\n                {...props.fieldconfig} \r\n                value={props.value} \r\n                onChange={props.changed}/>\r\n            break;\r\n\r\n        case ('textarea'):\r\n            inputElement = <textarea \r\n                className={inputClases.join(' ')}\r\n                {...props.fieldconfig} \r\n                value={props.value} \r\n                onChange={props.changed}/>\r\n            break;\r\n\r\n        case ('select'):\r\n            inputElement = <select \r\n                className={inputClases.join(' ')}\r\n                {...props.fieldconfig} \r\n                value={props.value} \r\n                onChange={props.changed}>\r\n                    {props.fieldconfig.options.map( option => (\r\n                        <option value={option.value} key={option.value}>\r\n                            {option.displayValue}\r\n                        </option>\r\n                    ))}\r\n            </select>\r\n            break;\r\n    \r\n        default:\r\n            inputElement = <input \r\n                        className={inputClases.join(' ')}\r\n                {...props.fieldconfig} \r\n                value={props.value} \r\n                onChange={props.changed}/>\r\n            break;\r\n    }\r\n    \r\n    \r\n    return(\r\n        <div>\r\n            <label>{props.label}</label>\r\n            {inputElement}  \r\n        </div>\r\n    );\r\n    \r\n};\r\n\r\nexport default input;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport * as actions from './../../../store/actions/index';\r\nimport Button from '../../../components/UI/Button/Button';\r\n\r\nclass OrderForm extends Component {\r\n    state = {\r\n        formFields: {\r\n            name: {\r\n                fieldType: 'input',\r\n                fieldConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name',\r\n                    label: 'Name',\r\n                },\r\n                value: '',\r\n                rules: {\r\n                    requiered: true,\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            zipcode: {\r\n                fieldType: 'input',\r\n                fieldConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Zipcode',\r\n                    label: 'Zipcode',\r\n                },\r\n                value: '',\r\n                rules: {\r\n                    requiered: true,\r\n                    minLength: 4,\r\n                    maxLength: 5,\r\n                    isNumeric: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            street: {\r\n                fieldType: 'input',\r\n                fieldConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Adress',\r\n                    label: 'Street',\r\n                },\r\n                value: '',\r\n                rules: {\r\n                    requiered: true,\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            email: {\r\n                fieldType: 'input',\r\n                fieldConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your e-mail',\r\n                    label: 'E-mail',\r\n                },\r\n                value: '',\r\n                rules: {\r\n                    requiered: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            deliverymethod: {\r\n                fieldType: 'select',\r\n                fieldConfig: {\r\n                    type: 'dropdown',\r\n                    placeholder: '',\r\n                    label: 'Delivery Options',\r\n                    options: [\r\n                        {value: 'fastest', displayValue: 'Fastest'},\r\n                        {value: 'cheapest', displayValue: 'Cheapest'}\r\n                    ],\r\n                },\r\n                value: 'fastest',\r\n                rules: {\r\n                    requiered: true,\r\n                },\r\n                valid: true,\r\n                touched: false\r\n            },\r\n        },\r\n        formValid: false\r\n    }\r\n\r\n    checkValidation(value, rules) {\r\n        let isValid = true;\r\n        if (!rules) {\r\n            return true;\r\n        }\r\n        \r\n        if (rules.requiered) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid\r\n        }\r\n\r\n        if (rules.isEmail) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        if (rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        const formData = {};\r\n        for (let formElementIdentifier in this.state.formFields) {\r\n            formData[formElementIdentifier] = this.state.formFields[formElementIdentifier].value;\r\n        }\r\n        const order = {\r\n            ingredients: this.props.ings,\r\n            price: this.props.price,\r\n            orderData: formData,\r\n            userId: this.props.userId\r\n        }\r\n\r\n        this.props.onOrderBurger(order, this.props.token);\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        const updatedFormFields = {\r\n            ...this.state.formFields\r\n        };\r\n        const updatedFormField = {\r\n            ...updatedFormFields[inputIdentifier]\r\n        };\r\n        updatedFormField.value = event.target.value;\r\n        updatedFormField.valid = this.checkValidation(updatedFormField.value, updatedFormField.rules)\r\n        updatedFormField.touched = true;\r\n        updatedFormFields[inputIdentifier] = updatedFormField;\r\n\r\n        let formValid = true;\r\n\r\n        for (let inputIdentifier in updatedFormFields) {\r\n        formValid = updatedFormFields[inputIdentifier].valid && formValid;\r\n        }\r\n        this.setState({formFields: updatedFormFields, formValid: formValid});\r\n    }\r\n\r\n    render () {\r\n        const formElements = [];\r\n\r\n        for (let key in this.state.formFields) {\r\n            formElements.push({\r\n                id: key, \r\n                config: this.state.formFields[key]\r\n            });\r\n        }\r\n\r\n        let form = (\r\n            <form onSubmit={this.submitHandler}>\r\n                {formElements.map(formElement => (\r\n                    <Input \r\n                        key={formElement.id} \r\n                        inputtype={formElement.config.fieldType} \r\n                        fieldconfig={formElement.config.fieldConfig} \r\n                        value={formElement.config.value}\r\n                        label={formElement.config.fieldConfig.label}\r\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)}\r\n                        touched={formElement.config.touched}\r\n                        invalid={!formElement.config.valid} />\r\n                ))}\r\n                <Button btnType='Success'>Confirm</Button>\r\n            </form>   \r\n        );\r\n\r\n        return (\r\n            <div>\r\n                <h4>Enter your contact data</h4>\r\n                {form}\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        token: state.logIn.token,\r\n        userId: state.logIn.userId\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onOrderBurger: (orderData, token) => dispatch (actions.purchaseBurger(orderData, token))\r\n    };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderForm);","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const purchaseBurgerSuccess = ( id, orderData ) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerFail = ( error ) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    };\r\n}\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    };\r\n};\r\n\r\nexport const purchaseBurger = ( orderData, token ) => {\r\n    return dispatch => {\r\n        dispatch( purchaseBurgerStart() );\r\n        axios.post( '/orders.json?auth=' + token, orderData )\r\n            .then( response => {\r\n                console.log( response.data );\r\n                dispatch( purchaseBurgerSuccess( response.data.name, orderData ) );\r\n            } )\r\n            .catch( error => {\r\n                dispatch( purchaseBurgerFail( error ) );\r\n                console.log(error);\r\n            } );\r\n    };\r\n};\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    };\r\n};\r\n\r\nexport const fetchOrdersSuccess = ( orders ) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    };\r\n};\r\n\r\nexport const fetchOrdersFail = ( error ) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const fetchOrdersStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    };\r\n};\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart());\r\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\r\n        axios.get( '/orders.json' + queryParams)\r\n            .then( res => {\r\n                const fetchedOrders = [];\r\n                for ( let key in res.data ) {\r\n                    fetchedOrders.push( {\r\n                        ...res.data[key],\r\n                        id: key\r\n                    } );\r\n                }\r\n                dispatch(fetchOrdersSuccess(fetchedOrders));\r\n            } )\r\n            .catch( err => {\r\n                dispatch(fetchOrdersFail(err));\r\n            } );\r\n    };\r\n};","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from './../../store/actions/index';\r\nimport Burger from './../../components/Burger/Burger'\r\nimport OrderForm from './OrderForm/OrderForm'\r\n\r\nclass Checkout extends Component {\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                <Burger ingredients={this.props.ings}/>\r\n                <h3>Price: {this.props.price}</h3>\r\n                <OrderForm />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Checkout);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport * as actions from '../../store/actions/index';\r\nimport { Link } from 'react-router-dom'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        controls: {\r\n            email: {\r\n                fieldType: 'input',\r\n                fieldConfig: {\r\n                    type: 'text',\r\n                    label: 'E-mail adress',\r\n                },\r\n                value: '',\r\n                rules: {\r\n                    requiered: true,\r\n                    isEmail: true,\r\n                },\r\n                valid: false,\r\n            },\r\n            passsword: {\r\n                fieldType: 'input',\r\n                fieldConfig: {\r\n                    type: 'text',\r\n                    label: 'Password',\r\n                },\r\n                value: '',\r\n                rules: {\r\n                    requiered: true,\r\n                    minLength: 6,\r\n                },\r\n                valid: false,\r\n            }\r\n        },\r\n        formValid: false\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        this.props.onRegister(this.state.controls.email.value, this.state.controls.passsword.value)\r\n    }\r\n\r\n    checkValidation(value, rules) {\r\n        let isValid = true;\r\n        if (!rules) {\r\n            return true;\r\n        }\r\n        \r\n        if (rules.requiered) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid\r\n        }\r\n\r\n        if (rules.isEmail) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        if (rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        const updatedControls = {\r\n            ...this.state.controls\r\n        };\r\n        const updatedControl = {\r\n            ...updatedControls[inputIdentifier]\r\n        };\r\n        updatedControl.value = event.target.value;\r\n        updatedControl.valid = this.checkValidation(updatedControl.value, updatedControl.rules)\r\n        updatedControl.touched = true;\r\n        updatedControls[inputIdentifier] = updatedControl;\r\n\r\n        let formValid = true;\r\n\r\n        for (let inputIdentifier in updatedControls) {\r\n        formValid = updatedControls[inputIdentifier].valid && formValid;\r\n        }\r\n        this.setState({controls: updatedControls, formValid: formValid});\r\n    }\r\n\r\n    render () {\r\n        const formElements = [];\r\n\r\n        for (let key in this.state.controls) {\r\n            formElements.push({\r\n                id: key, \r\n                config: this.state.controls[key]\r\n            });\r\n        }\r\n\r\n        let form = (\r\n            <form onSubmit={this.submitHandler}>\r\n                {formElements.map(formElement => (\r\n                    <Input \r\n                        key={formElement.id} \r\n                        inputtype={formElement.config.fieldType} \r\n                        fieldconfig={formElement.config.fieldConfig} \r\n                        value={formElement.config.value}\r\n                        label={formElement.config.fieldConfig.label}\r\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)}\r\n                        touched={formElement.config.touched}\r\n                        invalid={!formElement.config.valid} />\r\n                ))}\r\n                <Button btnType='Success'>Confirm</Button>\r\n            </form>   \r\n        );\r\n        \r\n        let errorMessage = null;\r\n\r\n        if (this.props.error) {\r\n            errorMessage = (\r\n                <p>{this.props.error.message}</p>\r\n            )\r\n        };\r\n\r\n        let registerRedirect = null;\r\n\r\n        if (this.props.isAuth) {\r\n            registerRedirect = <Redirect to=\"/signin\" />\r\n        }\r\n\r\n        return (\r\n            <div className='AuthForm' >\r\n                {registerRedirect}\r\n                {errorMessage}\r\n                {form}\r\n                <p>Already registered?</p> \r\n                <Link to='/signin' >Log In</Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        error: state.register.error,\r\n        isAuth: state.register.token !== null\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onRegister: (email, password) => dispatch(actions.register(email, password))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import axios from 'axios';\r\nimport * as actionTypes from './actionTypes';\r\nimport * as Keys from './googleApiKey';\r\n\r\nexport const registerStart = () => {\r\n    return {\r\n        type: actionTypes.REGISTER_START\r\n    };\r\n};\r\n\r\nexport const registerSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.REGISTER_SUCCESS,\r\n        idToken: token,\r\n        userId: userId,\r\n    };\r\n};\r\n\r\nexport const registerFail = (error) => {\r\n    return {\r\n        type: actionTypes.REGISTER_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const register = (email, password) => {\r\n    return dispatch => {\r\n        dispatch(registerStart());\r\n        const registerData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        }\r\n        const url = Keys.signUpApiKey ;\r\n        axios.post(url, registerData)\r\n        .then(response => {\r\n            console.log(response);\r\n            dispatch(registerSuccess(response.data.idToken, response.data.localId));\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            dispatch(registerFail(err.response.data.error))\r\n        })\r\n    };\r\n};","export const signUpApiKey = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDOGzGvRKpXhI4GZKd_LrwHNxfkgRyCy9Y';\r\n\r\nexport const signInApiKey = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDOGzGvRKpXhI4GZKd_LrwHNxfkgRyCy9Y';","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport * as actions from '../../store/actions/index';\r\nimport { Link } from 'react-router-dom';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        controls: {\r\n            email: {\r\n                fieldType: 'input',\r\n                fieldConfig: {\r\n                    type: 'text',\r\n                    label: 'E-mail adress',\r\n                },\r\n                value: '',\r\n                rules: {\r\n                    requiered: true,\r\n                    isEmail: true,\r\n                },\r\n                valid: false,\r\n            },\r\n            passsword: {\r\n                fieldType: 'input',\r\n                fieldConfig: {\r\n                    type: 'text',\r\n                    label: 'Password',\r\n                },\r\n                value: '',\r\n                rules: {\r\n                    requiered: true,\r\n                    minLength: 6,\r\n                },\r\n                valid: false,\r\n            }\r\n        },\r\n        formValid: false\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        this.props.onLogIn(this.state.controls.email.value, this.state.controls.passsword.value)\r\n    }\r\n\r\n    checkValidation(value, rules) {\r\n        let isValid = true;\r\n        if (!rules) {\r\n            return true;\r\n        }\r\n        \r\n        if (rules.requiered) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid\r\n        }\r\n\r\n        if (rules.isEmail) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        if (rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        const updatedControls = {\r\n            ...this.state.controls\r\n        };\r\n        const updatedControl = {\r\n            ...updatedControls[inputIdentifier]\r\n        };\r\n        updatedControl.value = event.target.value;\r\n        updatedControl.valid = this.checkValidation(updatedControl.value, updatedControl.rules)\r\n        updatedControl.touched = true;\r\n        updatedControls[inputIdentifier] = updatedControl;\r\n\r\n        let formValid = true;\r\n\r\n        for (let inputIdentifier in updatedControls) {\r\n        formValid = updatedControls[inputIdentifier].valid && formValid;\r\n        }\r\n        this.setState({controls: updatedControls, formValid: formValid});\r\n    }\r\n\r\n    render () {\r\n        const formElements = [];\r\n\r\n        for (let key in this.state.controls) {\r\n            formElements.push({\r\n                id: key, \r\n                config: this.state.controls[key]\r\n            });\r\n        }\r\n\r\n        let form = (\r\n            <form onSubmit={this.submitHandler}>\r\n                {formElements.map(formElement => (\r\n                    <Input \r\n                        key={formElement.id} \r\n                        inputtype={formElement.config.fieldType} \r\n                        fieldconfig={formElement.config.fieldConfig} \r\n                        value={formElement.config.value}\r\n                        label={formElement.config.fieldConfig.label}\r\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)}\r\n                        touched={formElement.config.touched}\r\n                        invalid={!formElement.config.valid} />\r\n                ))}\r\n                <Button btnType='Success'>Confirm</Button>\r\n            </form>   \r\n        );\r\n\r\n                \r\n        let errorMessage = null;\r\n\r\n        if (this.props.error) {\r\n            errorMessage = (\r\n                <p>{this.props.error.message}</p>\r\n            )\r\n        };\r\n\r\n        let logInRedirect = null;\r\n\r\n        if (this.props.isAuth) {\r\n            logInRedirect = <Redirect to=\"/\" />\r\n        }\r\n\r\n        return (\r\n            <div className='AuthForm'>\r\n                {logInRedirect}\r\n                {errorMessage}\r\n                {form}\r\n                <p>Not a member yet?</p> \r\n                <Link to='/signup' >Sign Up</Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        error: state.logIn.error,\r\n        isAuth: state.logIn.token !== null\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogIn: (email, password) => dispatch(actions.logIn(email, password))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React from 'react';\r\n\r\nconst order = ( props ) => {\r\n    const ingredients = [];\r\n\r\n    for ( let ingredientName in props.ingredients ) {\r\n        ingredients.push(\r\n            {\r\n                name: ingredientName,\r\n                amount: props.ingredients[ingredientName]\r\n            }\r\n        );\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return <span \r\n            style={{\r\n                textTransform: 'capitalize',\r\n                display: 'inline-block',\r\n                margin: '0 8px',\r\n                border: '1px solid #ccc',\r\n                padding: '5px'\r\n                }}\r\n            key={ig.name}>{ig.name} ({ig.amount})</span>;\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <p>Ingredients: {ingredientOutput}</p>\r\n            <p>Price: <strong>USD {Number.parseFloat( props.price ).toFixed( 2 )}</strong></p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default order;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nclass Orders extends Component {\r\n    componentDidMount () {\r\n        this.props.onFetchOrders(this.props.token, this.props.userId);\r\n    }\r\n\r\n    render () {\r\n        let orders = null;\r\n\r\n        orders = this.props.orders.map( order => (\r\n            <Order\r\n                key={order.id}\r\n                ingredients={order.ingredients}\r\n                price={order.price} />\r\n        ) )\r\n\r\n        return (\r\n            <div>\r\n                {orders}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        token: state.logIn.token,\r\n        userId: state.logIn.userId\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token, userId) => dispatch( actions.fetchOrders(token, userId) )\r\n    };\r\n};\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )( withErrorHandler( Orders, axios ) );","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as actions from './../../store/actions/index';\r\n\r\nclass LogOut extends Component {\r\n    componentDidMount () {\r\n        this.props.onLogOut();\r\n    }\r\n    render () {\r\n        return <Redirect to=\"/\"/>;\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogOut: () => dispatch(actions.logOut())\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(LogOut);","import React, {Component} from 'react';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport Layout from './containers/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport { BrowserRouter as Router, Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport Checkout from './containers/Checkout/Checkout';\nimport SignUp from './containers/Auth/SignUp';\nimport SignIn from './containers/Auth/SignIn';\nimport Orders from './containers/Orders/Orders';\nimport LogOut from './containers/Auth/LogOut';\nimport * as actions from './store/actions/index';\n\nclass App extends Component {\n\n  componentDidMount () {\n    this.props.onAutoLogIn();\n  }\n\n  render () {\n\n    let routes = (\n      <Switch>\n        <Route exact path=\"/\" component={BurgerBuilder}/>\n        <Route path=\"/signup\" component={SignUp} />\n        <Route path=\"/signin\" component={SignIn} />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n\n    if (this.props.isAuth) {\n      routes = (\n        <Switch>\n          <Route exact path=\"/\" component={BurgerBuilder}/>\n          <Route path=\"/checkout\" component={Checkout}/>\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/logout\" component={LogOut} />\n          <Route path=\"/orders\" component={Orders} />\n          <Redirect to=\"/\" />\n        </Switch>\n      );\n    }\n\n    return (\n    <Router>\n      <div>\n        <Layout>\n          {routes}\n        </Layout>\n      </div>\n    </Router>\n  );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.logIn.token !== null\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAutoLogIn: () => dispatch(actions.checkState())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    ingredients: {\r\n        salad: 0,\r\n        bacon: 0,\r\n        cheese: 0,\r\n        meat: 0,\r\n    },\r\n    totalPrice: 4,\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_INGREDIENT:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\r\n                },\r\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\r\n            };\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\r\n                },\r\n                totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false,\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.REGISTER_START:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                loading: true,\r\n            };\r\n        case actionTypes.REGISTER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                token: action.idToken,\r\n                userId: action.userId,\r\n                error: null,\r\n                loading: false,\r\n            }\r\n        case actionTypes.REGISTER_FAIL:\r\n                return {\r\n                    ...state,\r\n                    error: action.error,\r\n                    loading: false,\r\n                }\r\n        default:\r\n            return  state;\r\n    }\r\n}\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false,\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOGIN_START:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                loading: true,\r\n            };\r\n        case actionTypes.LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                token: action.idToken,\r\n                userId: action.userId,\r\n                error: null,\r\n                loading: false,\r\n            }\r\n        case actionTypes.LOGIN_FAIL:\r\n                return {\r\n                    ...state,\r\n                    error: action.error,\r\n                    loading: false,\r\n                }\r\n        case actionTypes.LOGIN_LOGOUT:\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                userId: null,\r\n            }\r\n        default:\r\n            return  state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.PURCHASE_INIT:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                purchased: false,\r\n            };\r\n        case actionTypes.PURCHASE_BURGER_START:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                purchased: false\r\n            };\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n            const newOrder =  { ...action.orderData, id: action.orderId };\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                orders: state.orders.concat( newOrder ),\r\n                purchased: true,\r\n            };\r\n        case actionTypes.PURCHASE_BURGER_FAIL:\r\n            return {\r\n                ...state,\r\n                purchased: false,\r\n                error: action.error,\r\n            };\r\n        case actionTypes.FETCH_ORDERS_START:\r\n            return {\r\n                ...state,\r\n            };\r\n        case actionTypes.FETCH_ORDERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                orders: action.orders,\r\n            };\r\n        case actionTypes.FETCH_ORDERS_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n            };\r\n        default:\r\n            return  state;\r\n    }\r\n}\r\n\r\nexport default reducer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\nimport {Provider} from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport burgerReducer from './store/reducers/burger';\nimport registerReducer from './store/reducers/register';\nimport logInReducer from './store/reducers/logIn';\nimport orderReducer from './store/reducers/order'\nimport * as serviceWorker from './serviceWorker';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerReducer,\n    register: registerReducer,\n    logIn: logInReducer,\n    order: orderReducer,   \n})\n\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n    \n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n\nexport default app;\n"],"sourceRoot":""}